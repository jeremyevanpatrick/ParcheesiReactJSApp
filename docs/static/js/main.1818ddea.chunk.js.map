{"version":3,"sources":["index.js"],"names":["Dice","React","Component","constructor","props","super","render","diceHtml","this","dice","length","a","diceClass","number","active","push","_jsxs","className","children","_jsx","Token","handleDragStart","e","playerClass","player","mouseDownCallback","mouseUpCallback","turn","human","onMouseDownMarker","onMouseUpMarker","draggable","onDragStart","onMouseDown","onMouseUp","tokenindex","Space","classString","safe","showMoves","indexOf","spaceIndex","positionindex","renderMarkers","Quadrant","positionIndex","players","slice","markersToRender","spacePosition","x","y","markers","getMarkersToRender","tokenArray","g","renderSpaceGroup","groupType","safeIndex","spaceNumbers","spaceArray","i","quadIndex","menuClass","homeSpaces","gameState","h","enters","posIndex","mainLabelText","centerBtnHtml","lowerAreaHtml","rollBtnClass","activePlayerCount","id","onClick","onClickStartGame","playerTrHtml","pId","cpu","off","pc","checked1","checked2","checked3","name","type","defaultChecked","onChange","onChangeConfigurePlayer","htmlFor","turnComplete","onClickEndTurn","onClickRollDice","playerStartClass","playerStartLabel","markersHtml","spaceNumbers1","Array","spaceNumbers2","spaceNumbers3","Board","quadArray","boardRow","j","Game","state","doubles","finished","blockades","moveMarker","start","end","p","r","setState","addBonusMove","distance","Object","assign","rollDice","callback","anyActiveDice","Math","floor","random","isThreeDoubles","mPos","space","distanceFromStart","z","curDistance","getDistance","getMostAdvancedPosition","hasAnyValidMoves","disableAllDice","bind","manageBlockades","processedBlockades","existingBlockadeIndex","position","duration","stillExists","splice","endTurn","playersComplete","startAiTurn","performAiRollAction","afterMoveCallback","setTimeout","loopOverActions","breakBlockade","foundMove","captureEnemy","moveUnsafeToSafe","moveOutOfStart","moveIntoHome","moveToSafeSpace","moveAwayFromNearbyEnemy","moveBehindNearestEnemy","moveMostAdvanced","moveAiMarker","cmdName","console","log","moveDistance","usedDiceIndices","findUsedDice","d","anyMarkersStillOnBoard","blockadePosition","validMovesForMarker","getPossiblePositions","validMovesArray","m","c","b","enemyMarkerPos","playerMarkerPos","safePositions","getSafePositionsForTurn","safeDestination","playerEnterPos","playerHomePos","markerHasEnemyBehind","s","manageIncrement","markersWithEnemyAhead","hasEnemyAhead","markerIndex","destPos","orderedMarkerIndices","mostAdvancedIndex","n","longestDistance","orderedMarkerPos","validMovesForOrderedMarker","handleChangeConfigurePlayer","inputName","target","split","pIndex","parseInt","handleClickStartGame","handleClickEndTurn","handleClickRollDice","handleMouseDownMarker","event","markerElement","ReactDOM","findDOMNode","clientX","getBoundingClientRect","left","clientY","top","distInsideX","parentNode","distInsideY","markerStyle","currentStyle","window","getComputedStyle","style","marginLeft","marginTop","zIndex","closest","document","onmousemove","mouseX","mouseY","width","height","handleMouseUpMarker","originPosition","getAttribute","validMoves","visibility","belowElement","elementFromPoint","destinationElement","destinationPosition","u","w","anyMoves","t","isSpaceBlocked","blocked","onSpace","enterPos","getDestination","moves","isPathBlocked","startPos","possiblePositions","fiveUsedToEnter","dest","diceMoves","fromPosition","indexToRemove","ramps","getElementById"],"mappings":"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","file":"static/js/main.1818ddea.chunk.js","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\n\r\nclass Dice extends React.Component {\r\n  \tconstructor(props){\r\n    \tsuper(props);\r\n  \t}\r\n\r\n  \trender(){\r\n  \t\tconst diceHtml = [];\r\n\r\n\t  \tif(this.props.dice.length > 0){\r\n\t  \t\tfor(var a=0;a<this.props.dice.length;a++){\r\n\t  \t\t\t\r\n\t  \t\t\tvar diceClass = \"die die-\" + this.props.dice[a].number;\r\n\t  \t\t\tif(!this.props.dice[a].active){\r\n\t  \t\t\t\tdiceClass += \" spentDie\";\r\n\t  \t\t\t}\r\n\r\n\t  \t\t\tdiceHtml.push(\r\n\t  \t\t\t\t<div className={diceClass}>\r\n\t  \t\t\t\t\t<span>•</span>\r\n\t  \t\t\t\t\t<span>•</span>\r\n\t  \t\t\t\t\t<span>•</span>\r\n\t  \t\t\t\t\t<span>•</span>\r\n\t  \t\t\t\t\t<span>•</span>\r\n\t  \t\t\t\t\t<span>•</span>\r\n\t  \t\t\t\t\t<b>10</b>\r\n\t  \t\t\t\t\t<strong>20</strong>\r\n\t  \t\t\t\t</div>\r\n  \t\t\t\t);\r\n\t  \t\t}\r\n\t  \t}\r\n\r\n\t  \treturn diceHtml;\r\n  \t}\r\n}\r\n\r\nclass Token extends React.Component {\r\n  \tconstructor(props){\r\n    \tsuper(props);\r\n  \t}\r\n\r\n\thandleDragStart(e){\r\n\t\treturn false;\r\n\t}\r\n\r\n  \trender(){\r\n\t\tvar playerClass = \"token player\" + this.props.player + \"Token\";\r\n\r\n\t\tlet mouseDownCallback = function(){};\r\n\t\tlet mouseUpCallback = function(){};\r\n\t\tif(this.props.dice.length>0 && this.props.player == this.props.turn && this.props.human == true){\r\n\t\t\tmouseDownCallback = this.props.onMouseDownMarker;\r\n\t\t\tmouseUpCallback = this.props.onMouseUpMarker;\r\n\t\t}\r\n\r\n\t\treturn (\r\n\t\t\t<div\r\n\t\t\t\tclassName={playerClass}\r\n\t            draggable={false}\r\n\t            onDragStart={(e) => this.handleDragStart(e)}\r\n\t            onMouseDown={mouseDownCallback}\r\n  \t\t\t\tonMouseUp={mouseUpCallback}\r\n  \t\t\t\ttokenindex={this.props.tokenindex}\r\n\t\t\t></div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nclass Space extends React.Component {\r\n  \tconstructor(props){\r\n    \tsuper(props);\r\n  \t}\r\n\r\n  \trender(){\r\n\t\tvar classString = \"space\";\r\n\t\tif(this.props.safe){\r\n\t\t\tclassString += \" safe\";\r\n\t\t}\r\n\t\tif(this.props.showMoves.length > 0 && this.props.showMoves.indexOf(this.props.spaceIndex) != -1){\r\n\t\t\tclassString += \" highlightSpace\";\r\n\t\t}\r\n\r\n\t\treturn (\r\n\t\t\t<div\r\n\t\t\t\tpositionindex={this.props.spaceIndex}\r\n\t\t\t\tclassName={classString}\r\n\t\t\t>\r\n\t\t\t\t{this.props.renderMarkers(this.props.spaceIndex)}\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nclass Quadrant extends React.Component {\r\n  \tconstructor(props){\r\n    \tsuper(props);\r\n  \t}\r\n\r\n  \trenderMarkers(positionIndex){\r\n    \tconst players = this.props.players.slice();\r\n  \t\tlet markersToRender = getMarkersToRender(players, positionIndex);\r\n\t\tconst tokenArray = [];\r\n\t\tfor(var g=0;g<markersToRender.length;g++){\r\n\t\t\ttokenArray.push(\r\n\t\t\t\t<Token\r\n\t\t\t\t\tturn={this.props.turn}\r\n\t\t\t\t\tdice={players[this.props.turn-1].dice}\r\n\t\t\t\t\tplayer={markersToRender[g]}\r\n\t\t\t\t\tonMouseDownMarker={this.props.onMouseDownMarker}\r\n      \t\t\t\tonMouseUpMarker={this.props.onMouseUpMarker}\r\n      \t\t\t\ttokenindex={positionIndex}\r\n      \t\t\t\thuman={players[this.props.turn-1].human}\r\n\t\t\t\t/>\r\n\t\t\t);\r\n\t\t}\r\n\t\treturn tokenArray;\r\n  \t}\r\n\r\n\trenderSpaceGroup(groupType, safeIndex, spaceNumbers) {\r\n\t\tconst spaceArray = [];\r\n\t\tfor (let i = 0; i < 8; i++) {\r\n\t\t\tspaceArray.push(\r\n\t\t\t\t<Space\r\n\t\t\t\t\tspaceIndex={spaceNumbers[i]}\r\n\t\t\t\t\tsafe={(i==safeIndex)}\r\n        \t\t\tshowMoves={this.props.showMoves}\r\n        \t\t\trenderMarkers={(x) => this.renderMarkers(x)}\r\n\t\t\t\t\tonMouseDownMarker={this.props.onMouseDownMarker}\r\n      \t\t\t\tonMouseUpMarker={this.props.onMouseUpMarker}\r\n    \t\t\t/>\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\treturn (\r\n\t\t\t<div className={groupType}>\r\n\t\t\t\t{spaceArray}\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n\r\n\trender(){\r\n\t\tvar i = this.props.quadIndex;\r\n\r\n\t\tif(i % 2 == 0){\r\n\t\t\tif(i == 4){\r\n\t\t\t\t//Home\r\n\r\n\t\t\t  \tvar menuClass = \"centerMenu playerTurn\" + this.props.turn;\r\n\t\t\t  \t\r\n\t\t\t  \tconst homeSpaces = [];\r\n\t\t\t  \tif(this.props.gameState == 0 || this.props.gameState == 1){\r\n\t\t\t\t  \tfor(var h=0; h<this.props.players.length;h++){\r\n\t\t\t\t  \t\t\r\n\t\t\t\t  \t\tvar classString = \"playerHome playerHome\";\r\n\t\t\t\t  \t\tvar e = this.props.players[h].enters;\r\n\t\t\t\t  \t\tclassString += (e==38 ? \"Bottom\" : (e==55 ? \"Right\" : (e==4 ? \"Top\" : \"Left\")));//e==21\r\n\r\n\t\t\t  \t\t\tvar posIndex = ((this.props.players[h].player * (-1)) - 10);\r\n\r\n\t\t\t\t\t\tif(this.props.showMoves.length > 0 && this.props.showMoves.indexOf(posIndex) != -1){\r\n\t\t\t\t\t\t\tclassString += \" highlightSpace\";\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t  \t\t\thomeSpaces.push(\r\n\t\t\t  \t\t\t\t<div\r\n\t\t\t\t\t\t\t\tclassName={classString}\r\n\t\t\t\t\t\t\t\tpositionindex={posIndex}\r\n\t      \t\t\t\t\t>\r\n\t      \t\t\t\t\t\t{this.renderMarkers(posIndex)}\r\n\t  \t\t\t\t\t\t</div>\r\n\t\t\t  \t\t\t);\r\n\t\t\t\t  \t}\r\n\t\t\t  \t}\r\n\r\n\t\t\t  \tlet mainLabelText = \"\";\r\n\t\t\t  \tvar centerBtnHtml = null;\r\n\t\t\t  \tlet lowerAreaHtml = null;\r\n\r\n\t\t\t  \tif(this.props.gameState == -1){\r\n\r\n\t\t\t  \t\t//pre menu\r\n\t\t\t  \t\tmenuClass += \" preMenu\";\r\n\r\n\t\t\t  \t\tmainLabelText = \"Parcheesi\";\r\n\r\n\t\t\t  \t\tlet rollBtnClass = \"disableBtn\";\r\n\t\t\t  \t\tlet activePlayerCount = 0;\r\n\t\t\t  \t\tfor(var x=0; x < this.props.players.length; x++){\r\n\t\t\t  \t\t\tif(this.props.players[x].human != null){\r\n\t\t\t  \t\t\t\tactivePlayerCount++;\r\n\t\t\t  \t\t\t}\r\n\t\t\t  \t\t}\r\n\t\t\t  \t\t//only start game if there are at least 2 players\r\n\t\t\t  \t\tif(activePlayerCount > 1){\r\n\t\t\t  \t\t\trollBtnClass = \"\";\r\n\t\t\t  \t\t}\r\n\r\n\t\t\t  \t\tcenterBtnHtml = (\r\n\t\t\t  \t\t\t<div\r\n\t\t\t\t\t\t\tid=\"rollBtn\"\r\n\t\t\t\t\t\t\tclassName={rollBtnClass}\r\n\t\t\t\t\t\t\tonClick={this.props.onClickStartGame}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tStart Game\r\n\t\t\t\t\t\t</div>\r\n\t\t\t  \t\t);\r\n\t\t\t\t\t\r\n\t\t\t\t\tconst playerTrHtml = [];\r\n\t\t\t  \t\tfor(let a=1; a<=4;a++){\r\n\t\t\t  \t\t\t\r\n\t\t\t  \t\t\tlet pId = \"p_\" + a;\r\n\t\t\t  \t\t\tlet cpu = \"cpu_\" + a;\r\n\t\t\t  \t\t\tlet off = \"off_\" + a;\r\n\t\t\t  \t\t\tlet pc = \"pc_\" + a;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tlet checked1 = \"\";\r\n\t\t\t  \t\t\tlet checked2 = \"\";\r\n\t\t\t  \t\t\tlet checked3 = \"\";\r\n\r\n\t\t\t  \t\t\tif(this.props.players[a-1].human == null){\r\n\t\t\t  \t\t\t\tchecked1 = \"checked\";\r\n\t\t\t  \t\t\t}else if(!this.props.players[a-1].human){\r\n\t\t\t  \t\t\t\tchecked2 = \"checked\";\r\n\t\t\t  \t\t\t}else if(this.props.players[a-1].human){\r\n\t\t\t  \t\t\t\tchecked3 = \"checked\";\r\n\t\t\t  \t\t\t}\r\n\r\n\t\t\t  \t\t\tplayerTrHtml.push(\r\n\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t<td>Player {a}</td>\r\n\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t<div className=\"switch-toggle switch-3 switch-candy\">\r\n\t\t\t\t\t\t\t\t\t\t<input id={pId} name={pc} type=\"radio\" defaultChecked={checked3} onChange={this.props.onChangeConfigurePlayer} />\r\n\t\t\t\t\t\t\t\t\t\t<label htmlFor={pId}>\r\n\t\t\t\t\t\t\t\t\t\t\tP{a}\r\n\t\t\t\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t\t\t\t\t<input id={cpu} name={pc} type=\"radio\" defaultChecked={checked2} onChange={this.props.onChangeConfigurePlayer} />\r\n\t\t\t\t\t\t\t\t\t\t<label htmlFor={cpu}>\r\n\t\t\t\t\t\t\t\t\t\t\tCPU\r\n\t\t\t\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t\t\t\t\t<input id={off} name={pc} type=\"radio\" defaultChecked={checked1} onChange={this.props.onChangeConfigurePlayer} />\r\n\t\t\t\t\t\t\t\t\t\t<label htmlFor={off}>\r\n\t\t\t\t\t\t\t\t\t\t\tOFF\r\n\t\t\t\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t  \t\t\t\t);\r\n\t\t\t  \t\t}\r\n\r\n\t\t\t\t\tlowerAreaHtml = (\r\n\t\t\t\t\t\t<table>\r\n\t\t\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t\t\t{playerTrHtml}\r\n\t\t\t\t\t\t\t</tbody>\r\n\t\t\t\t\t\t</table>\r\n\t\t\t\t\t);\r\n\r\n\t\t\t  \t}else if(this.props.gameState == 0){\r\n\r\n\t\t\t  \t\t//game is started\r\n\t\t\t  \t\tmainLabelText = \"Player \" + this.props.turn;\r\n\r\n\t\t\t\t\tlet dice = this.props.players[this.props.turn-1].dice;\r\n\t\t\t\t  \tlet rollBtnClass = (this.props.players[this.props.turn-1].human != true || (dice.length > 0 && (dice[0].active || dice[1].active))) ? \"disableBtn\" : \"\";\r\n\r\n\t\t\t\t  \tif(this.props.turnComplete){\r\n\t\t\t\t  \t\tcenterBtnHtml = (\r\n\t\t\t\t  \t\t\t<div\r\n\t\t\t\t\t\t\t\tid=\"rollBtn\"\r\n\t\t\t\t\t\t\t\tclassName={rollBtnClass}\r\n\t\t\t\t\t\t\t\tonClick={this.props.onClickEndTurn}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\tEnd Turn\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t  \t\t);\r\n\t\t\t\t  \t}else{\r\n\t\t\t\t  \t\tcenterBtnHtml = (\r\n\t\t\t\t  \t\t\t<div\r\n\t\t\t\t\t\t\t\tid=\"rollBtn\"\r\n\t\t\t\t\t\t\t\tclassName={rollBtnClass}\r\n\t\t\t\t\t\t\t\tonClick={this.props.onClickRollDice}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\tRoll Dice\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t  \t\t);\r\n\t\t\t\t  \t}\r\n\r\n\t\t\t\t  \tlowerAreaHtml = (\r\n\t\t\t\t\t\t<Dice dice={dice} />\r\n\t\t\t  \t\t);\r\n\r\n\t\t\t  \t}else if(this.props.gameState == 1){\r\n\t\t\t  \t\t\r\n\t\t\t  \t\t//game is completed\r\n\t\t\t  \t\tmainLabelText = <div>Game<br/>Completed</div>;\r\n\t\t\t  \t\t\r\n\t\t\t  \t}\r\n\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<div className=\"quadrant home\">\r\n    \t\t\t\t\t{homeSpaces}\r\n    \t\t\t\t\t<div className=\"innerHome\">\r\n\t    \t\t\t\t\t<div className={menuClass}>\r\n\t    \t\t\t\t\t\t<div className=\"playerTurn\">\r\n\t    \t\t\t\t\t\t\t{mainLabelText}\r\n\t    \t\t\t\t\t\t</div>\r\n\t    \t\t\t\t\t\t<div className=\"btnArea\">\r\n\t\t\t\t\t\t\t\t\t{centerBtnHtml}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className=\"diceArea\">\r\n\t\t\t\t\t\t\t\t\t{lowerAreaHtml}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n    \t\t\t\t</div>\r\n\t\t\t\t);\r\n\t\t\t}else{\r\n\t\t\t\t\r\n\t\t\t\t//Start\r\n\t\t\t\tlet playerStartClass = \"outerCircle player\" + this.props.player + \"Start\";\r\n\t\t\t\tlet playerStartLabel = (this.props.players[this.props.player-1].human != null && (this.props.gameState == 0 || this.props.gameState == 1)) ? \"Player \" + this.props.player : \"\";\r\n\t\t\t\tlet positionIndex = this.props.player * (-1);\r\n\r\n\t\t\t\tlet markersHtml = null;\r\n\t\t\t\tif(this.props.gameState == 0 || this.props.gameState == 1){\r\n\t\t\t\t\tmarkersHtml = this.renderMarkers(positionIndex);\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<div className=\"quadrant start\">\r\n\t\t\t\t\t\t<span className={playerStartClass}>\r\n\t\t\t\t\t\t\t<span className=\"innerCircle\">\r\n\t\t\t\t\t\t\t\t<div className=\"startName\">{playerStartLabel}</div>\r\n\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\tclassName=\"startPosition\"\r\n        \t\t\t\t\t\t\tpositionindex={positionIndex}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t{markersHtml}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t}else{\r\n\t\t\t//Spaces\r\n\t\t  \tvar groupType = (i==1||i==7) ? \"file-v\" : \"row-h\";\r\n\t\t  \tvar a = (i==1||i==3);//4-0-4\r\n\r\n\t\t  \tvar spaceNumbers1 = new Array(8);\r\n\t\t  \tvar spaceNumbers2 = new Array(8);\r\n\t\t  \tvar spaceNumbers3 = new Array(8);\r\n\t\t  \tif(i==1){\r\n\t\t  \t\t//top\r\n\t\t  \t\tspaceNumbers1 = [0,1,2,3,4,5,6,7];\r\n\t\t  \t\tspaceNumbers2 = [67,167,267,367,467,567,667,767];\r\n\t\t  \t\tspaceNumbers3 = [66,65,64,63,62,61,60,59];\r\n\t\t  \t}else if(i==3){\r\n\t\t  \t\t//left\r\n\t\t  \t\tspaceNumbers1 = [15,14,13,12,11,10,9,8];\r\n\t\t  \t\tspaceNumbers2 = [16,116,216,316,416,516,616,716];\r\n\t\t  \t\tspaceNumbers3 = [17,18,19,20,21,22,23,24];\r\n\t\t  \t}else if(i==5){\r\n\t\t  \t\t//right\r\n\t\t  \t\tspaceNumbers1 = [58,57,56,55,54,53,52,51];\r\n\t\t  \t\tspaceNumbers2 = [750,650,550,450,350,250,150,50];\r\n\t\t  \t\tspaceNumbers3 = [42,43,44,45,46,47,48,49];\r\n\t\t  \t}else if(i==7){\r\n\t\t  \t\t//bottom\r\n\t\t  \t\tspaceNumbers1 = [25,26,27,28,29,30,31,32];\r\n\t\t  \t\tspaceNumbers2 = [733,633,533,433,333,233,133,33];\r\n\t\t  \t\tspaceNumbers3 = [41,40,39,38,37,36,35,34];\r\n\t\t  \t}\r\n\r\n\t\t  \treturn (\r\n\t\t  \t\t<div className=\"quadrant\">\r\n\t\t        \t{this.renderSpaceGroup(groupType,a?4:3,spaceNumbers1)}\r\n\t\t        \t{this.renderSpaceGroup(groupType+\" ramp\",a?0:7,spaceNumbers2)}\r\n\t\t        \t{this.renderSpaceGroup(groupType,a?4:3,spaceNumbers3)}\r\n\t\t        </div>\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nclass Board extends React.Component {\r\n  constructor(props){\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n  \tconst quadArray = [];\r\n\tfor (let i = 0; i < 3; i++) {\r\n  \t\tconst boardRow = [];\r\n\t\tfor (let j = 0 + (3*i); j < 3 + (3*i); j++) {\r\n\t\t\tboardRow.push(\r\n\t\t\t\t<Quadrant\r\n\t\t\t\t\tgameState={this.props.gameState}\r\n\t\t\t\t\tturn={this.props.turn}\r\n\t\t\t\t\tquadIndex={j}\r\n\t\t\t\t\tplayer={j==0?3:(j==2)?2:(j==6)?4:1}\r\n\t\t\t\t\tonClickRollDice={this.props.onClickRollDice}\r\n\t\t\t\t\tonMouseDownMarker={this.props.onMouseDownMarker}\r\n\t          \t\tonMouseUpMarker={this.props.onMouseUpMarker}\r\n\t          \t\tonChangeConfigurePlayer={this.props.onChangeConfigurePlayer}\r\n\t          \t\tonClickStartGame={this.props.onClickStartGame}\r\n\t\t\t\t\tonClickEndTurn={this.props.onClickEndTurn}\r\n\t\t\t\t\tturnComplete={this.props.turnComplete}\r\n\t\t\t\t\tshowMoves={this.props.showMoves}\r\n\t\t\t\t\tplayers={this.props.players}\r\n\t\t\t\t/>\r\n\t\t\t);\r\n\t\t}\r\n\t\tquadArray.push(<div className=\"boardRow\">{boardRow}</div>);\r\n\t}\r\n\r\n    return (\r\n\t  <div id=\"board\">\r\n\t  \t{quadArray}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass Game extends React.Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n    \tgameState: -1,//-1=premenu; 0=started; 1=completed;\r\n    \tturn: 1,\r\n    \tturnComplete: false,\r\n    \tdoubles: 0,\r\n    \tshowMoves: [],\r\n    \tplayers: [\r\n    \t\t{\r\n    \t\t\thuman: true,\r\n    \t\t\tplayer: 1,\r\n    \t\t\tenters: 38,\r\n    \t\t\tmarkers: [-1,-1,-1,-1],\r\n    \t\t\tdice: [],\r\n    \t\t\tfinished: false,\r\n    \t\t\tblockades: []\r\n    \t\t},\r\n    \t\t{\r\n    \t\t\thuman: false,\r\n    \t\t\tplayer: 2,\r\n    \t\t\tenters: 55,\r\n    \t\t\tmarkers: [-2,-2,-2,-2],\r\n    \t\t\tdice: [],\r\n    \t\t\tfinished: false,\r\n    \t\t\tblockades: []\r\n    \t\t},\r\n    \t\t{\r\n    \t\t\thuman: false,\r\n    \t\t\tplayer: 3,\r\n    \t\t\tenters: 4,\r\n    \t\t\tmarkers: [-3,-3,-3,-3],\r\n    \t\t\tdice: [],\r\n    \t\t\tfinished: false,\r\n    \t\t\tblockades: []\r\n    \t\t},\r\n    \t\t{\r\n    \t\t\thuman: false,\r\n    \t\t\tplayer: 4,\r\n    \t\t\tenters: 21,\r\n    \t\t\tmarkers: [-4,-4,-4,-4],\r\n    \t\t\tdice: [],\r\n    \t\t\tfinished: false,\r\n    \t\t\tblockades: []\r\n    \t\t}\r\n    \t]\r\n    };\r\n\r\n    this.moveMarker = function(start, end){\r\n\t\t//update data model\r\n\t  \tconst players = this.state.players.slice();\r\n\t  \tfor(var p=0; p<players.length; p++){\r\n\t  \t\tfor(var r=0; r<players[p].markers.length; r++){\r\n\t  \t\t\tif(players[p].markers[r] == start){\r\n\t  \t\t\t\tplayers[p].markers[r] = end;\r\n\t  \t\t\t\tbreak;\r\n\t  \t\t\t}\r\n\t  \t\t}\r\n\t  \t}\r\n\r\n\t\tthis.setState({\r\n\t\t\tplayers: players\r\n\t\t});\r\n\r\n    };\r\n\r\n    this.addBonusMove = function(distance){\r\n\t  \tconst players = this.state.players.slice();\r\n\t  \tlet turn = Object.assign(this.state.turn);\r\n\r\n    \tplayers[turn-1].dice.push({\r\n\t\t\tnumber: distance,\r\n\t\t\tactive: true\r\n\t\t});\r\n\r\n\t\tthis.setState({\r\n\t\t\tplayers: players\r\n\t\t});\r\n\r\n    };\r\n\r\n    this.rollDice = function(callback){\r\n\r\n\t  \tconst players = this.state.players.slice();\r\n\t  \tconst turn = Object.assign(this.state.turn);\r\n\t  \tlet player = players[turn-1];\r\n\r\n\t  \tlet anyActiveDice = false;\r\n\t  \tfor(var a=0; a<player.dice.length; a++){\r\n\t  \t\tif(player.dice[a].active){\r\n\t  \t\t\tanyActiveDice = true;\r\n\t  \t\t}\r\n\t  \t}\r\n\r\n\t  \tif(player.dice.length == 0 || (!anyActiveDice && this.state.doubles > 0)){\r\n\t  \t\tplayer.dice = [\r\n\t  \t\t\t{\r\n\t  \t\t\t\tnumber: Math.floor(Math.random() * 6) + 1,\r\n\t  \t\t\t\tactive: true\r\n\t  \t\t\t},\r\n\t  \t\t\t{\r\n\t  \t\t\t\tnumber: Math.floor(Math.random() * 6) + 1,\r\n\t  \t\t\t\tactive: true\r\n\t  \t\t\t}\r\n\t  \t\t];\r\n\r\n\t  \t\t//render dice roll before proceeding\r\n\t  \t\tthis.setState({\r\n\t  \t\t\tplayers: players\r\n\t  \t\t}, function(){\r\n\r\n\t  \t\t\tvar isThreeDoubles = false;\r\n\r\n\t\t  \t\t//check for 3 doubles\r\n\t\t  \t\tvar doubles = Object.assign(this.state.doubles);\r\n\t\t  \t\tif(player.dice[0].number == player.dice[1].number){\r\n\t\t  \t\t\tif(doubles == 2){\r\n\t\t  \t\t\t\t//move furthest marker back to Start\r\n\t\t  \t\t\t\tvar mPos = getMostAdvancedPosition(player);\r\n\t\t  \t\t\t\tif(mPos != null){\r\n\r\n\t\t  \t\t\t\t\tthis.moveMarker(mPos, (player.player * (-1)));\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t  \t\t\t\tdoubles = 0;\r\n\t\t  \t\t\t\tisThreeDoubles = true;\r\n\r\n\t\t  \t\t\t}else{\r\n\t\t  \t\t\t\tdoubles++;\r\n\t\t  \t\t\t}\r\n\t\t  \t\t}else{\r\n\t\t  \t\t\tdoubles = 0;\r\n\t\t  \t\t}\r\n\r\n\t\t  \t\tthis.setState({\r\n\t\t  \t\t\tdoubles: doubles\r\n\t\t  \t\t});\r\n\r\n\t\t\t  \tif(isThreeDoubles || (!hasAnyValidMoves(players, turn) && player.dice[0].number != player.dice[1].number)){\r\n\t\t\t  \t\t\r\n\t\t\t  \t\t//no valid moves, show end turn button\r\n\t\t\t\t  \tthis.disableAllDice();\r\n\t\t\t  \t\tthis.setState({\r\n\t\t\t  \t\t\tturnComplete: true\r\n\t\t\t  \t\t});\r\n\r\n\t\t\t  \t}else if(!hasAnyValidMoves(players, turn) && player.dice[0].number == player.dice[1].number){\r\n\t\t\t  \t\t\r\n\t\t\t  \t\t//no valid moves on a double, set both dice to disabled without ending turn\r\n\t\t\t\t  \tthis.disableAllDice();\r\n\r\n\t\t\t  \t}\r\n\r\n\t\t\t  \t//otherwise, wait for next valid move\r\n\r\n\t  \t\t\tcallback();\r\n\r\n\t  \t\t}.bind(this));\r\n\r\n\t  \t}else{\r\n\t  \t\tcallback();\r\n\t  \t}\r\n  \t\t\r\n    };\r\n\r\n    this.disableAllDice = function(){\r\n\t  \tconst players = this.state.players.slice();\r\n\t  \tlet turn = Object.assign(this.state.turn);\r\n\r\n\t\tplayers[turn-1].dice[0].active = false;\r\n\t  \tplayers[turn-1].dice[1].active = false;\r\n\r\n\t\t//if there is a bonus die\r\n\t\tif(typeof players[turn-1].dice[2] != \"undefined\"){\r\n\t\t\tplayers[turn-1].dice[2].active = false;\r\n\t\t}\r\n\t\tif(typeof players[turn-1].dice[3] != \"undefined\"){\r\n\t\t\tplayers[turn-1].dice[3].active = false;\r\n\t\t}\r\n\r\n\t\tthis.setState({\r\n\t\t\tplayers: players\r\n\t\t});\r\n\r\n    };\r\n\r\n    this.manageBlockades = function(){\r\n\r\n    \tconst players = this.state.players.slice();\r\n\t  \tlet turn = Object.assign(this.state.turn);\r\n\r\n\t  \t//manage blockades\r\n  \t\tvar processedBlockades = [];\r\n\t\tvar x = players[turn-1].markers.length;\r\n\t\twhile (x--) {\r\n\r\n\t\t\tvar y = players[turn-1].markers.length;\r\n\t\t\twhile (y--) {\r\n\t  \t\t\t//if two different markers are on the same space, but not Start or Home\r\n\t\t\t    if( x!=y &&\r\n\t\t\t    \t[-1,-2,-3,-4,-11,-12,-13,-14].indexOf(players[turn-1].markers[x]) == -1 &&\r\n\t  \t\t\t\tplayers[turn-1].markers[x] == players[turn-1].markers[y] &&\r\n\t  \t\t\t\tprocessedBlockades.indexOf(players[turn-1].markers[x]) == -1\r\n\t\t\t\t){\r\n\t\t\t\t\t//check if the current blockade already exists in the list from the previous turn\r\n\t\t\t\t\tvar existingBlockadeIndex = null;\r\n\t\t\t\t\tvar z = players[turn-1].blockades.length;\r\n\t\t\t\t\twhile (z--) {\r\n\t\t\t\t\t\tif(players[turn-1].blockades[z].position == players[turn-1].markers[x]){\r\n\t\t\t\t\t\t\texistingBlockadeIndex = z;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif(existingBlockadeIndex != null){\r\n\t\t\t\t\t\tplayers[turn-1].blockades[existingBlockadeIndex].duration += 1;\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tplayers[turn-1].blockades.push({\r\n\t\t\t\t\t\t\tposition: players[turn-1].markers[x],\r\n\t  \t\t\t\t\t\tduration: 1\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t//add to temp list so it is not processed twice\r\n\t  \t\t\t\tprocessedBlockades.push(players[turn-1].markers[x]);\r\n\t  \t\t\t}\r\n\t  \t\t}\r\n\r\n\t\t}\r\n\r\n\t  \t//remove blockades that no longer exist\r\n\t\tvar x = players[turn-1].blockades.length;\r\n\t\twhile (x--) {\r\n\t\t\t\r\n\t\t\tvar stillExists = false;\r\n\t\t\tvar y = processedBlockades.length;\r\n\t\t\twhile (y--) {\r\n\t\t\t\tif(processedBlockades[y] == players[turn-1].blockades[x].position){\r\n\t\t\t\t\tstillExists = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif(!stillExists){\r\n\t\t\t\tplayers[turn-1].blockades.splice(x, 1);\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t  \t//blockade not broken after 3 turns\r\n\t\tvar x = players[turn-1].blockades.length;\r\n\t\twhile (x--) {\r\n\t\t\tif(players[turn-1].blockades[x].duration > 3){\r\n\t\t\t\t\r\n\t\t\t\t//move 1 of the markers back to Start\r\n\t  \t\t\tvar start = players[turn-1].blockades[x].position;\r\n\t  \t\t\tvar end = (players[turn-1].player * (-1));\r\n\r\n\t\t  \t\tfor(var r=0; r<players[turn-1].markers.length; r++){\r\n\t\t  \t\t\tif(players[turn-1].markers[r] == start){\r\n\t\t  \t\t\t\tplayers[turn-1].markers[r] = end;\r\n\t\t  \t\t\t\tbreak;\r\n\t\t  \t\t\t}\r\n\t\t  \t\t}\r\n\r\n\t\t\t\t//remove from blockades\r\n\t\t\t\tplayers[turn-1].blockades.splice(x, 1);\r\n\r\n\t\t\t}\r\n\t\t}\r\n\r\n  \t\tthis.setState({\r\n\t\t\tplayers: players\r\n\t\t});\r\n\r\n    };\r\n\r\n    this.endTurn = function(){\r\n    \tconst players = this.state.players.slice();\r\n\t  \tlet turn = Object.assign(this.state.turn);\r\n\r\n\t  \t//clear dice for current player\r\n\t  \tplayers[turn-1].dice = [];\r\n\r\n\t  \tthis.manageBlockades();\r\n\r\n\t  \tvar playersComplete = 0;\r\n\t  \twhile(true){\r\n\t  \t\t\r\n\t  \t\t//advance turn to next player\r\n\t\t  \tturn = (turn == players.length) ? 1 : turn + 1;\r\n\r\n\t  \t\t//check if new current player is finished, or not active\r\n\t\t  \tif(players[turn-1].finished || players[turn-1].human == null){\r\n\t\t  \t\tplayersComplete++;\r\n\t\t  \t}else{\r\n\t\t  \t\t//exit on the first player that still has markers on the board\r\n\t\t  \t\tbreak;\r\n\t\t  \t}\r\n\r\n\t  \t\tif(playersComplete == players.length){\r\n\r\n\t  \t\t\t//ALL PLAYERS COMPLETED\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tgameState: 1,\r\n\t\t\t\t\tplayers: players\r\n\t\t\t\t});\r\n\r\n\t  \t\t\treturn;\r\n\t  \t\t}\r\n\r\n\t  \t}\r\n\r\n\t\tthis.setState({\r\n\t\t\tturn: turn,\r\n\t\t\tturnComplete: false,\r\n\t\t\tplayers: players\r\n\t\t}, function(){\r\n\r\n\t\t\t//if next turn is a CPU player, run AI\r\n\t\t\tif(players[turn-1].human == false){\r\n\r\n\t\t\t\tthis.startAiTurn();\r\n\r\n\t\t\t}\r\n\r\n\t\t});\r\n\r\n    };\r\n\r\n    this.startAiTurn = function(){\r\n\r\n    \tthis.performAiRollAction(function(){\r\n\r\n    \t\tlet players = this.state.players.slice();\r\n\t\t  \tlet turn = Object.assign(this.state.turn);\r\n\r\n\t\t  \t//roll again if a double\r\n\t\t  \tif(players[turn-1].dice[0].number == players[turn-1].dice[1].number){\r\n\r\n\t\t\t\tthis.performAiRollAction(function(){\r\n\r\n\t\t\t\t\tplayers = this.state.players.slice();\r\n\r\n\t\t\t\t\t//roll again if a second double\r\n\t\t\t\t\tif(players[turn-1].dice[0].number == players[turn-1].dice[1].number){\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tthis.performAiRollAction(function(){\r\n\r\n\t\t\t\t\t\t\tthis.endTurn();\r\n\r\n\t\t\t\t\t\t}.bind(this));\r\n\r\n\t\t\t\t\t}else{\r\n\t\t\t\t  \t\tthis.endTurn();\r\n\t\t\t\t  \t}\r\n\r\n\t\t\t\t}.bind(this));\r\n\r\n\t\t  \t}else{\r\n\t\t  \t\tthis.endTurn();\r\n\t\t  \t}\r\n\r\n    \t}.bind(this));\r\n\r\n    };\r\n\r\n    this.performAiRollAction = function(callback){\r\n\r\n    \t//roll dice\r\n    \tthis.rollDice(function(){\r\n\r\n\t\t\tthis.afterMoveCallback(function(){\r\n\r\n\t\t\t\tthis.disableAllDice();\r\n\r\n\t\t\t\tcallback();\r\n\r\n\t\t  \t}.bind(this));\r\n\r\n\t\t}.bind(this));\r\n\r\n    };\r\n\r\n    this.afterMoveCallback = function(callback){\r\n\r\n\t\t//pause for 0.5 second before each move\r\n    \tsetTimeout(function(){\r\n\r\n\t    \tconst players = this.state.players.slice();\r\n\t\t  \tlet turn = Object.assign(this.state.turn);\r\n\r\n\t    \tif(hasAnyValidMoves(players, turn)){\r\n\r\n    \t\t\tthis.loopOverActions(function(){\r\n    \t\t\t\t\r\n    \t\t\t\t//hide highlights after each move\r\n    \t\t\t\tthis.setState({\r\n\t\t\t\t  \t\tshowMoves: []\r\n\t\t\t\t  \t}, function(){\r\n\r\n\t\t\t  \t\t\tcallback();\r\n\r\n\t\t\t\t  \t});\r\n\r\n\t    \t\t}.bind(this));\r\n\r\n\t    \t}else{\r\n\t    \t\tcallback();\r\n\t    \t}\r\n\r\n    \t}.bind(this), 500);\r\n\r\n    };\r\n\r\n    this.loopOverActions = function(callback){\r\n\r\n    \tthis.breakBlockade(function(foundMove){\r\n\r\n\t\t\tif(!foundMove){\r\n\r\n\t\t\t\tthis.captureEnemy(function(foundMove){\r\n\r\n\t\t\t\t\tif(!foundMove){\r\n\r\n\t\t\t\t\t\tthis.moveUnsafeToSafe(function(foundMove){\r\n\r\n\t\t\t\t\t\t\tif(!foundMove){\r\n\r\n\t\t\t\t\t\t\t\tthis.moveOutOfStart(function(foundMove){\r\n\r\n\t\t\t\t\t\t\t\t\tif(!foundMove){\r\n\r\n\t\t\t\t\t\t\t\t\t\tthis.moveIntoHome(function(foundMove){\r\n\r\n\t\t\t\t\t\t\t\t\t\t\tif(!foundMove){\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\tthis.moveToSafeSpace(function(foundMove){\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tif(!foundMove){\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.moveAwayFromNearbyEnemy(function(foundMove){\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif(!foundMove){\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.moveBehindNearestEnemy(function(foundMove){\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif(!foundMove){\r\n\t\t\t\t\t\t\t\t\t\t    \t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.moveMostAdvanced(function(foundMove){\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t//no remaining valid moves\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif(!foundMove){\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcallback();\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.afterMoveCallback(callback);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}.bind(this));\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.afterMoveCallback(callback);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}.bind(this));\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.afterMoveCallback(callback);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}.bind(this));\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.afterMoveCallback(callback);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t}.bind(this));\r\n\t\t\t\t\t\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\t\t\t\t\t\tthis.afterMoveCallback(callback);\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t}.bind(this));\r\n\t\t\t\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\t\t\t\tthis.afterMoveCallback(callback);\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}.bind(this));\r\n\t\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\t\tthis.afterMoveCallback(callback);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}.bind(this));\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tthis.afterMoveCallback(callback);\r\n\t\t\t\t\t}\r\n\t\t\t\t}.bind(this));\r\n\t\t\t}else{\r\n\t\t\t\tthis.afterMoveCallback(callback);\r\n\t\t\t}\r\n\t\t}.bind(this));\r\n\r\n    };\r\n\r\n    this.moveAiMarker = function(start, end, players, turn, cmdName){\r\n\r\n    \tconsole.log(\"CPU Player \" + turn + \": \" + cmdName);\r\n\r\n\t  \tthis.setState({\r\n\t  \t\tshowMoves: [end]\r\n\t  \t}, function(){\r\n\r\n\t  \t\tsetTimeout(function(){\r\n\r\n\t  \t\t\t//move marker to destination\r\n\t\t    \tfor(var r=0; r<players[turn-1].markers.length; r++){\r\n\t\t  \t\t\tif(players[turn-1].markers[r] == start){\r\n\t\t  \t\t\t\tplayers[turn-1].markers[r] = end;\r\n\t\t  \t\t\t\tbreak;\r\n\t\t  \t\t\t}\r\n\t\t  \t\t}\r\n\r\n\t\t\t\t//set used die (or dice) as disabled\r\n\t\t\t\tvar moveDistance = getDistance(start, end, players[turn-1].enters);\r\n\t\t\t\tvar usedDiceIndices = findUsedDice(players[turn-1].dice, moveDistance);\r\n\t\t\t\tfor(var d=0; d<usedDiceIndices.length;d++){\r\n\t\t\t\t\tplayers[turn-1].dice[usedDiceIndices[d]].active = false;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t//check if the player has completed all markers\r\n\t\t\t\tvar anyMarkersStillOnBoard = false;\r\n\t\t\t\tfor(var z=0;z<players[turn-1].markers.length;z++){\r\n\t\t\t\t\tif([-11,-12,-13,-14].indexOf(players[turn-1].markers[z]) == -1){\r\n\t\t\t\t\t\tanyMarkersStillOnBoard = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif(!anyMarkersStillOnBoard){\r\n\t\t\t\t\tplayers[turn-1].finished = true;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tplayers: players\r\n\t\t\t\t});\r\n\r\n\t\t\t}.bind(this), 500);\r\n\r\n\t\t});\r\n\r\n    };\r\n\r\n    this.breakBlockade = function(callback){\r\n\r\n\t  \tlet players = this.state.players.slice();\r\n\t  \tlet turn = Object.assign(this.state.turn);\r\n\r\n    \t//check if any markers have a duration of 3, if so try to move one\r\n    \tvar blockadePosition = null;\r\n    \tfor(var x=0;x<players[turn-1].blockades.length;x++){\r\n\r\n    \t\tif(players[turn-1].blockades[x].duration == 3){\r\n\r\n    \t\t\tblockadePosition = players[turn-1].blockades[x].position;\r\n    \t\t\tbreak;\r\n\r\n    \t\t}\r\n\r\n    \t}\r\n\r\n    \tif(blockadePosition != null){\r\n\r\n    \t\tvar validMovesForMarker = getPossiblePositions(blockadePosition, players, turn);\r\n\r\n    \t\tif(validMovesForMarker.length > 0){\r\n\r\n\t    \t\tfor(var x=0; x<validMovesForMarker.length;x++){\r\n\t    \t\t\t\r\n\t    \t\t\t//remove blockade before passing players to move function\r\n\t    \t\t\tvar y = players[turn-1].blockades.length;\r\n\t    \t\t\twhile(y--){\r\n\r\n\t    \t\t\t\tif(players[turn-1].blockades[y].position == blockadePosition){\r\n\r\n\t    \t\t\t\t\tplayers[turn-1].blockades.splice(x, 1);\r\n\r\n\t    \t\t\t\t\tbreak;\r\n\r\n\t    \t\t\t\t}\r\n\r\n\t    \t\t\t}\r\n\r\n\t    \t\t\tthis.moveAiMarker(blockadePosition, validMovesForMarker[x], players, turn, 'breakBlockade');\r\n\t    \t\t\t\r\n\t    \t\t\tbreak;\r\n\r\n\t    \t\t}\r\n\t\t\t\t\r\n\t\t\t\tcallback(true);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n    \t}\r\n\r\n\t\tcallback(false);\r\n\t\treturn;\r\n    };\r\n\r\n    this.captureEnemy = function(callback){\r\n\r\n\t  \tlet players = this.state.players.slice();\r\n\t  \tlet turn = Object.assign(this.state.turn);\r\n\r\n\t  \tlet validMovesArray = [];\r\n\r\n\t  \tfor(var x=0; x<players[turn-1].markers.length;x++){\r\n\r\n\t  \t\tvar m = players[turn-1].markers[x];\r\n\t  \t\tvalidMovesArray.push(getPossiblePositions(m, players, turn));\r\n\t  \t\t\r\n\t  \t}\r\n\r\n  \t\t//capture enemy\r\n\t  \tfor(var c=0; c<validMovesArray.length;c++){\r\n\t\t  \tfor(var a=0;a<players.length;a++){\r\n\t\t\t\tif(a != turn - 1){\r\n\t\t\t\t\tfor(var b=0; b<players[a].markers.length; b++){\r\n\t\t\t\t\t\tvar enemyMarkerPos = players[a].markers[b];\r\n\t\t\t\t\t\tif(validMovesArray[c].indexOf(enemyMarkerPos) != -1){\r\n\r\n\t\t\t\t\t\t\t//move enemy back to Start\r\n\t  \t\t\t\t\t\tthis.moveMarker(enemyMarkerPos, (players[a].player * (-1)));\r\n\r\n\t  \t\t\t\t\t\tvar playerMarkerPos = players[turn-1].markers[c];\r\n\r\n\t  \t\t\t\t\t\tthis.moveAiMarker(playerMarkerPos, enemyMarkerPos, players, turn, 'captureEnemy');\r\n\r\n\t\t\t\t\t\t\tthis.addBonusMove(20);\r\n\r\n\t\t\t\t\t\t\tcallback(true);\r\n\r\n\t\t\t\t\t\t\treturn;\r\n\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t  \t}\r\n\r\n\t  \t}\r\n\r\n\t\tcallback(false);\r\n\t\treturn;\r\n    };\r\n\r\n    this.moveUnsafeToSafe = function(callback){\r\n\r\n    \tlet players = this.state.players.slice();\r\n\t  \tlet turn = Object.assign(this.state.turn);\r\n\r\n\t  \tlet validMovesArray = [];\r\n\r\n\t  \tfor(var x=0; x<players[turn-1].markers.length;x++){\r\n\r\n\t  \t\tvar m = players[turn-1].markers[x];\r\n\t  \t\tvalidMovesArray.push(getPossiblePositions(m, players, turn));\r\n\t  \t\t\r\n\t  \t}\r\n\r\n\t  \tvar safePositions = getSafePositionsForTurn(players, turn);\r\n\r\n  \t\t//move from unsafe to safe space\r\n\t  \tfor(var c=0; c<validMovesArray.length;c++){\r\n\r\n  \t\t\t//if any marker is not on a safe space\r\n  \t\t\tif(safePositions.indexOf(players[turn-1].markers[c]) == -1){\r\n\r\n\t  \t\t\tfor(var b=0; b<safePositions.length; b++){\r\n\r\n\t  \t\t\t\t//and a safe space is a valid move for that marker\r\n\t\t  \t\t\tif(validMovesArray[c].indexOf(safePositions[b]) != -1){\r\n\r\n  \t\t\t\t\t\tvar safeDestination = safePositions[b];\r\n\r\n  \t\t\t\t\t\tthis.moveAiMarker(players[turn-1].markers[c], safeDestination, players, turn, 'moveUnsafeToSafe');\r\n\r\n\t\t\t\t\t\tcallback(true);\r\n\t\t\t\t\t\treturn;\r\n\r\n\t\t  \t\t\t}else{\r\n\r\n\t\t  \t\t\t\t//or if any team marker position is a valid move for another marker\r\n\t  \t\t\t\t\tfor(var a=0; a<players[turn-1].markers.length; a++){\r\n\t  \t\t\t\t\t\t\r\n\t  \t\t\t\t\t\tif(a!=c && validMovesArray[c].indexOf(players[turn-1].markers[a]) != -1){\r\n\t  \t\t\t\t\t\t\t\r\n\t  \t\t\t\t\t\t\tvar safeDestination = players[turn-1].markers[a];\r\n\r\n\t\t\t\t\t\t\t\tthis.moveAiMarker(players[turn-1].markers[c], safeDestination, players, turn, 'moveUnsafeToSafe');\r\n\r\n\t\t\t\t\t\t\t\tcallback(true);\r\n\t\t\t\t\t\t\t\treturn;\r\n\r\n\t  \t\t\t\t\t\t}\r\n\r\n\t  \t\t\t\t\t}\r\n\r\n\t\t  \t\t\t}\r\n\r\n\t  \t\t\t}\r\n\r\n\t  \t\t}\r\n\t  \t\t\r\n\t  \t}\r\n\r\n\t\tcallback(false);\r\n\t\treturn;\r\n    };\r\n\r\n    this.moveOutOfStart = function(callback){\r\n\r\n    \tlet players = this.state.players.slice();\r\n\t  \tlet turn = Object.assign(this.state.turn);\r\n\r\n\t  \tlet validMovesArray = [];\r\n\r\n\t  \tfor(var x=0; x<players[turn-1].markers.length;x++){\r\n\r\n\t  \t\tvar m = players[turn-1].markers[x];\r\n\t  \t\tvalidMovesArray.push(getPossiblePositions(m, players, turn));\r\n\t  \t\t\r\n\t  \t}\r\n\r\n    \t//move out of Start\r\n\t  \tfor(var c=0; c<validMovesArray.length;c++){\r\n\r\n\t  \t\tlet playerEnterPos = players[turn-1].enters;\r\n\t  \t\tif(validMovesArray[c].indexOf(playerEnterPos) != -1){\r\n\r\n\t  \t\t\tvar playerMarkerPos = players[turn-1].markers[c];\r\n\r\n\t\t\t\tthis.moveAiMarker(playerMarkerPos, playerEnterPos, players, turn, 'moveOutOfStart');\r\n\r\n\t\t\t\tcallback(true);\r\n\t\t\t\treturn;\r\n\r\n\t  \t\t}\r\n\r\n\t  \t}\r\n\r\n\t\tcallback(false);\r\n\t\treturn;\r\n    };\r\n\r\n    this.moveIntoHome = function(callback){\r\n\r\n    \tlet players = this.state.players.slice();\r\n\t  \tlet turn = Object.assign(this.state.turn);\r\n\t\t\r\n\t\tlet validMovesArray = [];\r\n\r\n\t  \tfor(var x=0; x<players[turn-1].markers.length;x++){\r\n\r\n\t  \t\tvar m = players[turn-1].markers[x];\r\n\t  \t\tvalidMovesArray.push(getPossiblePositions(m, players, turn));\r\n\t  \t\t\r\n\t  \t}\r\n    \t\r\n    \t//move into Home\r\n\t  \tfor(var c=0; c<validMovesArray.length;c++){\r\n\r\n\t  \t\tlet playerHomePos = (turn * (-1)) - 10;\r\n\t  \t\tif(validMovesArray[c].indexOf(playerHomePos) != -1){\r\n\r\n\t  \t\t\tvar playerMarkerPos = players[turn-1].markers[c];\r\n\r\n\t\t\t\tthis.moveAiMarker(playerMarkerPos, playerHomePos, players, turn, 'moveIntoHome');\r\n\r\n    \t\t\tthis.addBonusMove(10);\r\n\r\n\t\t\t\tcallback(true);\r\n\r\n\t\t\t\treturn;\r\n\r\n\t  \t\t}\r\n\r\n\t  \t}\r\n\r\n\t\tcallback(false);\r\n\t\treturn;\r\n    };\r\n\r\n    this.moveToSafeSpace = function(callback){\r\n\r\n    \tlet players = this.state.players.slice();\r\n\t  \tlet turn = Object.assign(this.state.turn);\r\n\r\n\t  \tlet validMovesArray = [];\r\n\r\n\t  \tfor(var x=0; x<players[turn-1].markers.length;x++){\r\n\r\n\t  \t\tvar m = players[turn-1].markers[x];\r\n\t  \t\tvalidMovesArray.push(getPossiblePositions(m, players, turn));\r\n\t  \t\t\r\n\t  \t}\r\n\r\n\t  \tvar safePositions = getSafePositionsForTurn(players, turn);\r\n\r\n  \t\t//move from any space to a safe space\r\n\t  \tfor(var c=0; c<validMovesArray.length;c++){\r\n\r\n  \t\t\tfor(var b=0; b<safePositions.length; b++){\r\n\r\n  \t\t\t\t//if a ramp space or safe space is a valid move for a marker\r\n\t  \t\t\tif(validMovesArray[c].indexOf(safePositions[b]) != -1){\r\n\r\n\t\t\t\t\tvar safeDestination = safePositions[b];\r\n\r\n\t\t\t\t\tthis.moveAiMarker(players[turn-1].markers[c], safeDestination, players, turn, 'moveToSafeSpace');\r\n\r\n\t\t\t\t\tcallback(true);\r\n\t\t\t\t\treturn;\r\n\r\n\t  \t\t\t}else{\r\n\t  \t\t\t\t//or if any team marker position is a valid move for another marker\r\n  \t\t\t\t\tfor(var a=0; a<players[turn-1].markers.length; a++){\r\n  \t\t\t\t\t\t\r\n  \t\t\t\t\t\tif(a!=c && validMovesArray[c].indexOf(players[turn-1].markers[a]) != -1){\r\n  \t\t\t\t\t\t\t\r\n  \t\t\t\t\t\t\tvar safeDestination = players[turn-1].markers[a];\r\n\r\n\t\t\t\t\t\t\tthis.moveAiMarker(players[turn-1].markers[c], safeDestination, players, turn, 'moveToSafeSpace');\r\n\r\n\t\t\t\t\t\t\tcallback(true);\r\n\t\t\t\t\t\t\treturn;\r\n\r\n  \t\t\t\t\t\t}\r\n\r\n  \t\t\t\t\t}\r\n\r\n\t  \t\t\t}\r\n\r\n  \t\t\t}\r\n\t  \t\t\r\n\t  \t}\r\n\r\n\t\tcallback(false);\r\n\t\treturn;\r\n    };\r\n\r\n    this.moveAwayFromNearbyEnemy = function(callback){\r\n    \t\r\n    \tlet players = this.state.players.slice();\r\n\t  \tlet turn = Object.assign(this.state.turn);\r\n\t\t\r\n\t  \tvar safePositions = getSafePositionsForTurn(players, turn);\r\n\r\n\t\tlet validMovesArray = [];\r\n\r\n\t  \tfor(var x=0; x<players[turn-1].markers.length;x++){\r\n\r\n\t  \t\tvar m = players[turn-1].markers[x];\r\n\t  \t\t//only get valid moves for markers that are not safe\r\n\t  \t\tif(safePositions.indexOf(m) == -1 && [-11,-12,-13,-14].indexOf(m) == -1){\r\n\r\n\t  \t\t\tvar markerHasEnemyBehind = false;\r\n\r\n\t  \t\t\tfor(var y=0;y<players.length;y++){\r\n\t  \t\t\t\tif(players[y].player != turn){\r\n\t  \t\t\t\t\t//for each enemy marker\r\n\t  \t\t\t\t\tfor(var z=0;z<players[y].markers.length;z++){\r\n\r\n\t  \t\t\t\t\t\t//check if the enemy marker has a player marker within 10 spaces\r\n\t  \t\t\t\t\t\tvar enemyMarkerPos = players[y].markers[z];\r\n\t  \t\t\t\t\t\tfor(var s=0;s<10;s++){\r\n\t  \t\t\t\t\t\t\t\r\n\t  \t\t\t\t\t\t\tenemyMarkerPos = manageIncrement(enemyMarkerPos, players[y].enters);\r\n\r\n\t  \t\t\t\t\t\t\tif(enemyMarkerPos == m){\r\n\r\n\t  \t\t\t\t\t\t\t\tmarkerHasEnemyBehind = true;\r\n\r\n\t  \t\t\t\t\t\t\t}\r\n\r\n\t  \t\t\t\t\t\t}\r\n\r\n\t  \t\t\t\t\t}\r\n\t  \t\t\t\t}\r\n\r\n\t  \t\t\t}\r\n\r\n\t  \t\t\tif(markerHasEnemyBehind){\r\n\t  \t\t\t\tvalidMovesArray.push(getPossiblePositions(m, players, turn));\r\n\t  \t\t\t}else{\r\n\t\t  \t\t\tvalidMovesArray.push([]);\r\n\t\t  \t\t}\r\n\r\n\t  \t\t}else{\r\n\t  \t\t\tvalidMovesArray.push([]);\r\n\t  \t\t}\r\n\r\n\t  \t}\r\n    \t\r\n    \t//move away from nearby enemy\r\n\t  \tfor(var c=0; c<validMovesArray.length;c++){\r\n\r\n\t  \t\tif(validMovesArray[c].length > 0){\r\n\r\n  \t\t\t\tvar playerMarkerPos = players[turn-1].markers[c];\r\n\r\n\t\t\t\tthis.moveAiMarker(playerMarkerPos, validMovesArray[c][0], players, turn, 'moveAwayFromNearbyEnemy');\r\n\r\n\t\t\t\tcallback(true);\r\n\t\t\t\treturn;\r\n\r\n\t\t\t}\r\n\r\n\t  \t}\r\n\r\n\t\tcallback(false);\r\n\t\treturn;\r\n\r\n    };\r\n\r\n    this.moveBehindNearestEnemy = function(callback){\r\n    \t\r\n    \tlet players = this.state.players.slice();\r\n\t  \tlet turn = Object.assign(this.state.turn);\r\n\t\t\r\n\t\tlet validMovesArray = [];\r\n\r\n\t  \tfor(var x=0; x<players[turn-1].markers.length;x++){\r\n\r\n\t  \t\tvar m = players[turn-1].markers[x];\r\n\t  \t\tvalidMovesArray.push(getPossiblePositions(m, players, turn));\r\n\t  \t\t\r\n\t  \t}\r\n\r\n\t  \t//get player marker indices where there are enemies ahead\r\n\t  \tvar markersWithEnemyAhead = [];\r\n\t  \tfor(var x=0; x<players[turn-1].markers.length;x++){\r\n\r\n\t  \t\tvar playerMarkerPos = players[turn-1].markers[x];\r\n\t\t\tfor(var s=0;s<10;s++){\r\n\t\t\t\t\r\n\t\t\t\tvar hasEnemyAhead = false;\r\n\r\n\t\t\t\tplayerMarkerPos = manageIncrement(playerMarkerPos, players[turn-1].enters);\r\n\r\n\t\t\t\t//if the next space exists\r\n\t\t\t\tif(playerMarkerPos != null){\r\n\t\t\t\t\t\r\n\t\t\t\t\t//for each enemy player\r\n\t\t\t\t\tfor(var y=0; y<players.length;y++){\r\n\r\n\t\t\t\t\t\tif(players[turn-1].player != players[y].player){\r\n\r\n\t\t\t\t\t\t\t//for each enemy marker\r\n\t\t\t\t\t\t\tfor(var z=0; z<players[y].markers.length;z++){\r\n\r\n\t\t\t\t\t\t\t\tvar enemyMarkerPos = players[y].markers[z];\r\n\r\n\t\t\t\t\t\t\t\t//if the enemy is in the path and it is the first enemy found in the path\r\n\t\t\t\t\t\t\t\tif(playerMarkerPos == enemyMarkerPos && !hasEnemyAhead){\r\n\r\n\t\t\t\t\t\t\t\t\tmarkersWithEnemyAhead.push(x);\r\n\r\n\t\t\t\t\t\t\t\t\tvar a = validMovesArray[x].length;\r\n\t\t\t\t\t\t\t\t\twhile(a--){\r\n\r\n\t\t\t\t\t\t\t\t\t\tvar distToDest = getDistance(players[turn-1].markers[x], validMovesArray[x][a], players[turn-1].enters);\r\n\t\t\t\t\t\t\t\t\t\tvar distToEnemy = getDistance(players[turn-1].markers[x], enemyMarkerPos, players[turn-1].enters);\r\n\r\n\t\t\t\t\t\t\t\t\t\t//remove any destination from valid moves where there is an enemy in the path\r\n\t\t\t\t\t\t\t\t\t\tif(distToDest > distToEnemy){\r\n\t\t\t\t\t\t\t\t\t\t\tvalidMovesArray[x].splice(a, 1);\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\thasEnemyAhead = true;\r\n\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}else{\r\n\r\n\t\t\t\t\t//if no space exists ahead, skip to next marker\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t//make the first valid move of a marker with enemies ahead that does not require moving past an enemy\r\n\t\tfor(var a=0;a<markersWithEnemyAhead.length;a++){\r\n\r\n\t\t\tvar markerIndex = markersWithEnemyAhead[a];\r\n\t\t\tvar validMovesForMarker = validMovesArray[markerIndex];\r\n\t\t\tfor(var b=0; b<validMovesForMarker.length;b++){\r\n\r\n\t\t\t\tvar destPos = validMovesForMarker[b];\r\n\t\t\t\tvar playerMarkerPos = players[turn-1].markers[markerIndex];\r\n\r\n\t\t\t\tthis.moveAiMarker(playerMarkerPos, destPos, players, turn, 'moveBehindNearestEnemy');\r\n\r\n\t\t\t\tcallback(true);\r\n\t\t\t\treturn;\r\n\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tcallback(false);\r\n\t\treturn;\r\n\r\n    };\r\n\r\n    this.moveMostAdvanced = function(callback){\r\n\r\n    \tlet players = this.state.players.slice();\r\n\t  \tlet turn = Object.assign(this.state.turn);\r\n\t\t\r\n\t\tlet validMovesArray = [];\r\n\r\n\t  \tfor(var x=0; x<players[turn-1].markers.length;x++){\r\n\r\n\t  \t\tvar m = players[turn-1].markers[x];\r\n\t  \t\tvalidMovesArray.push(getPossiblePositions(m, players, turn));\r\n\t  \t\t\r\n\t  \t}\r\n\r\n\t  \tvar orderedMarkerIndices = [];\r\n\t  \tvar mostAdvancedIndex = null;\r\n\r\n\t  \tfor(var n=0; n<players[turn-1].markers.length;n++){\r\n\r\n\t\t  \tvar longestDistance = -900;\r\n\t\t  \tfor(var m=0; m<players[turn-1].markers.length;m++){\r\n\t\t  \t\t\r\n\t\t  \t\t//only get distance of marker that is beyond the enter position\r\n\t\t  \t\tvar distanceFromStart = -1;\r\n\t\t  \t\tif(players[turn-1].markers[m] == players[turn-1].enters){\r\n\t\t  \t\t\tdistanceFromStart = 0;\r\n\t\t  \t\t}else if([-1,-2,-3,-4].indexOf(players[turn-1].markers[m]) == -1){\r\n\t\t  \t\t\tdistanceFromStart = getDistance(players[turn-1].enters, players[turn-1].markers[m], players[turn-1].enters);\r\n\t\t  \t\t}\r\n\t\t  \t\t\r\n\t\t  \t\tif(orderedMarkerIndices.indexOf(m) == -1 && longestDistance < distanceFromStart){\r\n\t\t\t\t\tlongestDistance = distanceFromStart;\r\n\t\t\t\t\tmostAdvancedIndex = m;\r\n\t\t  \t\t}\r\n\t\t  \t}\r\n\t  \t\torderedMarkerIndices.push(mostAdvancedIndex);\r\n\r\n\t\t}\r\n\r\n\t\tfor(var m=0; m<orderedMarkerIndices.length;m++){\r\n\r\n\t\t\tvar orderedMarkerPos = players[turn-1].markers[orderedMarkerIndices[m]];\r\n\t\t\tvar validMovesForOrderedMarker = validMovesArray[orderedMarkerIndices[m]];\r\n\r\n\t\t\tfor(var n=0; n<validMovesForOrderedMarker.length; n++){\r\n\r\n\t\t\t\tthis.moveAiMarker(orderedMarkerPos, validMovesForOrderedMarker[n], players, turn, 'moveMostAdvanced');\r\n\r\n\t\t\t\tcallback(true);\r\n\t\t\t\treturn;\r\n\r\n\t\t\t}\r\n\r\n\t  \t}\r\n\r\n\t\tcallback(false);\r\n\t\treturn;\r\n    };\r\n\r\n  }\r\n\r\n  handleChangeConfigurePlayer(e){\r\n\r\n\t\tlet inputName = e.target.id.split('_');\r\n\r\n\t\tlet human = inputName[0] == 'p' ? true : (inputName[0] == 'cpu' ? false : null);\r\n\t\tlet pIndex = parseInt(inputName[1]) - 1;\r\n\r\n\t  \tconst players = this.state.players.slice();\r\n\t  \tplayers[pIndex].human = human;\r\n\r\n\t\tthis.setState({\r\n\t\t\tplayers: players\r\n\t\t});\r\n\r\n  }\r\n\r\n  handleClickStartGame(e){\r\n\t\t\r\n\t\t//find the first player and set the turn\r\n\t\tconst players = this.state.players.slice();\r\n\r\n\t\tlet activePlayerCount = 0;\r\n\t\tfor(var x=0; x<players.length;x++){\r\n\t\t\tif(players[x].human != null){\r\n\t\t\t\tactivePlayerCount++;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t//only start game if there are at least 2 players\r\n\t\tif(activePlayerCount > 1){\r\n\r\n\t\t\tlet turn = Object.assign(this.state.turn) - 1;\r\n\r\n\t\t\t//set game to start\r\n\t\t\tthis.setState({\r\n\t\t\t\tgameState: 0\r\n\t\t\t});\r\n\r\n\t\t  \twhile(true){\r\n\t\t  \t\t\r\n\t\t  \t\t//advance turn to next player\r\n\t\t\t  \tturn = (turn == players.length) ? 1 : turn + 1;\r\n\r\n\t\t  \t\t//set the next active player as the current turn\r\n\t\t\t  \tif(players[turn-1].human != null){\r\n\t\t\t  \t\tbreak;\r\n\t\t\t  \t}\r\n\r\n\t\t  \t}\r\n\r\n\t\t  \t//start first turn\r\n\t\t\tthis.setState({\r\n\t\t\t\tturn: turn,\r\n\t\t\t\tturnComplete: false\r\n\t\t\t}, function(){\r\n\r\n\t\t\t\tif(players[turn-1].human == false){\r\n\r\n\t\t\t\t\tthis.startAiTurn();\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t});\r\n\t\t}\r\n\t  \t\r\n  }\r\n\r\n  \thandleClickEndTurn(e){\r\n\t\tthis.endTurn();\r\n  \t}\r\n\r\n  \thandleClickRollDice(e){\r\n  \t\tthis.rollDice(function(){\r\n\r\n  \t\t});\r\n  \t}\r\n\r\n  \t//move clicked marker out of the origin space and center under the mouse\r\n    handleMouseDownMarker(event){\r\n  \t\tconst markerElement = ReactDOM.findDOMNode(event.target);\r\n\r\n  \t\t//get the distance between the marker and the mouse\r\n\t    let shiftX = event.clientX - markerElement.getBoundingClientRect().left;\r\n\t    let shiftY = event.clientY - markerElement.getBoundingClientRect().top;\r\n\r\n\t    //get the distance between the marker and its parent\r\n\t    let distInsideX = markerElement.getBoundingClientRect().left - markerElement.parentNode.getBoundingClientRect().left;\r\n\t    let distInsideY = markerElement.getBoundingClientRect().top - markerElement.parentNode.getBoundingClientRect().top;\r\n\r\n\t    //set the marker to its equivalent position using absolute positioning inside its parent\r\n\t    var markerStyle = markerElement.currentStyle || window.getComputedStyle(markerElement);\r\n    \tmarkerElement.style.left = distInsideX - parseInt(markerStyle.marginLeft) + 'px';\r\n    \tmarkerElement.style.top = distInsideY - parseInt(markerStyle.marginTop) + 'px';\r\n\t    markerElement.style.position = 'absolute';\r\n\t    markerElement.style.zIndex = 5000;\r\n\t    markerElement.parentNode.style.zIndex = 5000;\r\n\t    markerElement.closest('.quadrant').style.zIndex = 5000;\r\n\r\n    \t//continually center marker under the mouse as it moves\r\n    \tdocument.onmousemove = function(e){\r\n\t\t\t//get the distance between the parent and the mouse\r\n\t    \tlet mouseX = e.clientX - markerElement.parentNode.getBoundingClientRect().left;\r\n\t    \tlet mouseY = e.clientY - markerElement.parentNode.getBoundingClientRect().top;\r\n\r\n\t    \t//move the marker to the same position as the mouse, relative to its parent\r\n\t    \tvar markerStyle = markerElement.currentStyle || window.getComputedStyle(markerElement);\r\n\t\t\tmarkerElement.style.left = mouseX - (markerElement.getBoundingClientRect().width / 2) - parseInt(markerStyle.marginLeft) + 'px';\r\n\t\t\tmarkerElement.style.top = mouseY - (markerElement.getBoundingClientRect().height / 2) - parseInt(markerStyle.marginTop) + 'px';\r\n    \t}\r\n    }\r\n\r\n    //stop the move listener, and drop the marker into the destination space or back in the origin space\r\n\thandleMouseUpMarker(event){\r\n  \t\tdocument.onmousemove = null;\r\n\r\n  \t\tconst markerElement = ReactDOM.findDOMNode(event.target);\r\n\r\n  \t\t//tokenindex is the last recorded position of the token\r\n    \tconst originPosition = parseInt(markerElement.getAttribute('tokenindex'));\r\n\t\tlet players = this.state.players.slice();\r\n\t\tconst turn = Object.assign(this.state.turn);\r\n\r\n        let validMoves = getPossiblePositions(originPosition, players, turn);\r\n\r\n\t    //capture the element below the marker\r\n\t    markerElement.style.visibility = \"hidden\";\r\n\t    let belowElement = document.elementFromPoint(event.clientX, event.clientY);\r\n\t    markerElement.style.visibility = null;\r\n\r\n\t    if (belowElement != null){\r\n\r\n\t    \tlet destinationElement = belowElement.closest('.space, .playerHome');\r\n\t    \tif(destinationElement != null){\r\n\r\n\t\t\t    let destinationPosition = parseInt(destinationElement.getAttribute('positionindex'));\r\n\r\n\t\t\t    //if space is a valid move\r\n\t\t\t    if(validMoves.indexOf(destinationPosition) != -1){\r\n\r\n\t\t\t\t\tfor(var u=0;u<players.length; u++){\r\n\t\t\t    \t\t//if not the current player\r\n\t\t\t    \t\tif(players[u].player != turn){\r\n\t\t\t\t\t    \tfor(var w=0;w<players[u].markers.length; w++){\r\n\t\t\t\t\t    \t\t//if enemy marker is on destination space\r\n\t\t\t\t\t\t  \t\tif(players[u].markers[w] == destinationPosition){\r\n\t\t\t\t\t\t  \t\t\t//send enemy marker back to Start\r\n\t\t\t\t\t\t  \t\t\tthis.moveMarker(destinationPosition, (players[u].player * (-1)));\r\n\t\t\t\t\t\t  \t\t\tthis.addBonusMove(20);\r\n\t\t\t\t\t\t  \t\t\tbreak;\r\n\t\t\t\t\t\t  \t\t}\r\n\t\t\t\t\t\t  \t}\r\n\t\t\t\t\t  \t}\r\n\t\t\t\t\t}\r\n\r\n\t\t        \t//move marker element into destination space\r\n\t\t  \t\t\tthis.moveMarker(originPosition, destinationPosition);\r\n\t\t\t\t\tmarkerElement.style.position = null;\r\n\t\t\t\t\tmarkerElement.style.zIndex = null;\r\n\t\t\t\t    markerElement.style.left = null;\r\n\t\t\t\t    markerElement.style.top = null;\r\n\t    \t\t\tmarkerElement.parentNode.style.zIndex = null;\r\n\t    \t\t\tmarkerElement.closest('.quadrant').style.zIndex = null;\r\n\r\n\t\t\t\t  \tplayers = this.state.players.slice();\r\n\r\n\t\t\t\t\t//set used die (or dice) as disabled\r\n\t\t  \t\t\tvar moveDistance = getDistance(originPosition, destinationPosition, players[turn-1].enters);\r\n\t\t  \t\t\tvar usedDiceIndices = findUsedDice(players[turn-1].dice, moveDistance);\r\n\t\t  \t\t\tfor(var b=0; b<usedDiceIndices.length;b++){\r\n\t\t\t\t\t\tplayers[turn-1].dice[usedDiceIndices[b]].active = false;\r\n\t\t  \t\t\t}\r\n\r\n\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\tplayers: players\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\t//if marker made it to Home\r\n\t\t\t\t\tif((players[turn-1].player * (-1)) - 10 == destinationPosition){\r\n\t\t\t\t\t\tthis.addBonusMove(10);\r\n\r\n\t\t\t\t\t\t//check if the player has completed all markers\r\n\t\t\t\t\t\tvar anyMarkersStillOnBoard = false;\r\n\t\t\t\t\t\tplayers = this.state.players.slice();\r\n\t\t\t\t\t\tfor(var z=0;z<players[turn-1].markers.length;z++){\r\n\t\t\t\t\t\t\tif([-11,-12,-13,-14].indexOf(players[turn-1].markers[z]) == -1){\r\n\t\t\t\t\t\t\t\tanyMarkersStillOnBoard = true;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif(!anyMarkersStillOnBoard){\r\n\t\t\t\t\t\t\tplayers[turn-1].finished = true;\r\n\t\t\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\t\t\tplayers: players\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t  \t\t\t}\r\n\r\n\t\t  \t\t\t//if there are no valid moves and it was NOT a double\r\n\t\t\t\t  \tplayers = this.state.players.slice();\r\n\t\t  \t\t\tif(!hasAnyValidMoves(players, turn) &&\r\n\t\t  \t\t\t\tplayers[turn-1].dice[0].number != players[turn-1].dice[1].number){\r\n\r\n\t\t  \t\t\t\t//clear dice and end turn\r\n\t\t  \t\t\t\tthis.disableAllDice();\r\n\t\t\t\t  \t\tthis.setState({\r\n\t\t\t\t  \t\t\tturnComplete: true\r\n\t\t\t\t  \t\t});\r\n\r\n\t\t  \t\t\t}else if(!hasAnyValidMoves(players, turn) &&\r\n\t\t  \t\t\t\tplayers[turn-1].dice[0].number == players[turn-1].dice[1].number){\r\n\t\t  \t\t\t\t\r\n\t\t  \t\t\t\t//if there are no valid moves and it WAS a double\r\n\t\t  \t\t\t\t//clear dice without ending turn\r\n\t\t  \t\t\t\tthis.disableAllDice();\r\n\r\n\t\t  \t\t\t}\r\n\r\n\t\t  \t\t\t//otherwise, wait for next valid move\r\n\t\t\t  \t\tthis.setState({\r\n\t\t\t  \t\t\tshowMoves: []\r\n\t\t\t  \t\t});\r\n\r\n\t\t\t  \t\treturn;\r\n\t\t\t    }\r\n\t    \t}\r\n\t    }\r\n\r\n\t    //invalid move, remove movement styles and show valid moves\r\n    \tthis.setState({\r\n  \t\t\tshowMoves: validMoves\r\n  \t\t});\r\n\r\n    \tmarkerElement.style.position = null;\r\n    \tmarkerElement.style.zIndex = null;\r\n        markerElement.style.left = null;\r\n        markerElement.style.top = null;\r\n\t\tmarkerElement.parentNode.style.zIndex = null;\r\n\t\tmarkerElement.closest('.quadrant').style.zIndex = null;\r\n\r\n\t}\r\n\r\n    render() {\r\n\t    return (\r\n\t    \t<div id=\"boardContainer\">\r\n\t          <Board\r\n\t          \tgameState={this.state.gameState}\r\n\t          \tturn={this.state.turn}\r\n\t          \tonMouseDownMarker={(e) => this.handleMouseDownMarker(e)}\r\n\t          \tonMouseUpMarker={(e) => this.handleMouseUpMarker(e)}\r\n\t          \tonClickStartGame={(e) => this.handleClickStartGame(e)}\r\n\t          \tonChangeConfigurePlayer={(e) => this.handleChangeConfigurePlayer(e)}\r\n\t          \tonClickRollDice={(e) => this.handleClickRollDice(e)}\r\n\t          \tonClickEndTurn={(e) => this.handleClickEndTurn(e)}\r\n\t          \tturnComplete={this.state.turnComplete}\r\n\t          \tshowMoves={this.state.showMoves}\r\n\t          \tplayers={this.state.players}\r\n\t          />\r\n          </div>\r\n\t    );\r\n    }\r\n}\r\n\r\n// ========================================\r\n\r\nReactDOM.render(\r\n  <Game />,\r\n  document.getElementById('root')\r\n);\r\n\r\nfunction hasAnyValidMoves(players, turn){\r\n\tconst player = players[turn-1];\r\n\tvar anyMoves = false;\r\n\r\n\t//check for legal moves\r\n\tfor(var t=0; t<player.markers.length; t++){\r\n\t\tvar positionArray = getPossiblePositions(player.markers[t], players, turn);\r\n\r\n\t\tif(positionArray.length > 0){\r\n\t\t\tanyMoves = true;\r\n\t\t}\r\n\t}\r\n\treturn anyMoves;\r\n}\r\n\r\nfunction isSpaceBlocked(space, players){\r\n\r\n  \tvar blocked = false;\r\n  \t//for each player\r\n  \tfor(var x=0;x<players.length;x++){\r\n  \t\tvar onSpace = 0;\r\n  \t\t//count the number of markers on the space\r\n  \t\tfor(var y=0;y<players[x].markers.length;y++){\r\n\t  \t\tif(players[x].markers[y] == space){\r\n\t\t\t\tonSpace++;\r\n\t  \t\t}\r\n  \t\t}\r\n  \t\t//if there are two markers, the space is blocked\r\n  \t\tif(onSpace == 2){\r\n  \t\t\tblocked = true;\r\n  \t\t}\r\n  \t}\r\n\r\n  \treturn blocked;\r\n}\r\n\r\nfunction manageIncrement(x, enterPos){\r\n\tif(x == null){\r\n\t\treturn x;\r\n\t}\r\n  \tif(x==67){\r\n  \t\tif(enterPos == 4){\r\n  \t\t\t//increment up ramp\r\n  \t\t\treturn x + 100;\r\n  \t\t}else {\r\n  \t\t\t//increment back to 0\r\n  \t\t\treturn 0;\r\n  \t\t}\r\n  \t} else if((x==16 && enterPos==21) || (x==33 && enterPos==38) || (x==50 && enterPos==55) || (x > 67 && x < 716)){\r\n  \t\t//increment up non-looping ramps\r\n  \t\treturn x + 100;\r\n  \t}else if(x==716){\r\n  \t\t//increment into Home\r\n  \t\treturn -14;\r\n  \t}else if(x==733){\r\n  \t\t//increment into Home\r\n  \t\treturn -11;\r\n  \t}else if(x==750){\r\n  \t\t//increment into Home\r\n  \t\treturn -12;\r\n  \t}else if(x==767){\r\n  \t\t//increment into Home\r\n  \t\treturn -13;\r\n  \t}else if([-11,-12,-13,-14].indexOf(x) != -1){\r\n  \t\t//already incremented to Home\r\n  \t\treturn null;\r\n  \t}else if([-1,-2,-3,-4].indexOf(x) != -1){\r\n  \t\t//at Start\r\n  \t\treturn enterPos;\r\n  \t}else{\r\n  \t\t//regular increment\r\n  \t\treturn x + 1;\r\n  \t}\r\n}\r\n\r\nfunction getDestination(start, moves, enterPos){\r\n  \tfor(var x=0;x<moves;x++){\r\n  \t\tstart = manageIncrement(start, enterPos);\r\n  \t}\r\n  \treturn start;\r\n}\r\n\r\nfunction isPathBlocked(start, end, enterPos, players){\r\n  \t//advance through each space in the move path\r\n\twhile(start != end){\r\n\t\tif(start == null){\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\t//increment before checking in case the start space is from a blocked space\r\n\t\tstart = manageIncrement(start, enterPos);\r\n\t\tif([-11,-12,-13,-14].indexOf(start) != -1){\r\n\t\t\t//the Home space is never blocked\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif(isSpaceBlocked(start, players)){\r\n  \t\t\t//exit if a blocked space is found in path\r\n  \t\t\treturn true;\r\n  \t\t}\r\n  \t}\r\n  \treturn false;\r\n}\r\n\r\nfunction getPossiblePositions(startPos, players, turn){\r\n\r\n  \tvar player = players[turn-1];\r\n  \tvar possiblePositions = [];\r\n\r\n\tif([-1,-2,-3,-4].indexOf(startPos) != -1){\r\n\t\t//marker is at Start\r\n\t\tif(isSpaceBlocked(player.enters, players)){\r\n\t\t\treturn [];\r\n\t\t}else{\r\n\t\t\tif((!player.dice[0].active || player.dice[0].number != 5) &&\r\n\t\t\t\t(!player.dice[1].active || player.dice[1].number != 5)){\r\n\t\t\t\t//if no 5 is rolled\r\n\t\t\t\treturn [];\r\n\t\t\t}else{\r\n\t\t\t\t//only use one 5 to enter if it is a double\r\n\t\t\t\tlet fiveUsedToEnter = false;\r\n\t\t\t\tfor(var x=0;x<player.dice.length;x++){\r\n\t\t\t\t\tif(player.dice[x].active){\r\n\t\t\t\t\t\tif(player.dice[x].number == 5 && !fiveUsedToEnter){\r\n\t\t\t\t\t\t\tfiveUsedToEnter = true;\r\n\t\t\t\t\t\t\tpossiblePositions.push(player.enters);\r\n\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\tvar dest = player.enters + player.dice[x].number;\r\n\t\t\t\t\t\t\tif(!isPathBlocked(player.enters, dest, player.enters, players)){\r\n\t\t\t\t\t\t\t\tpossiblePositions.push(dest);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}else if([-11,-12,-13,-14].indexOf(startPos) != -1){\r\n\t\t//marker has reached Home\r\n\t\treturn [];\r\n\t}else{\r\n\t\t//somewhere on the board\r\n\t\tconst dice = player.dice.slice();\r\n\t\tlet diceMoves = [];\r\n\r\n\t\t//get an array of active dice (max 2)\r\n\t\tfor(var x=0; x<dice.length; x++){\r\n\t\t\tif(dice[x].active){\r\n\t\t\t\tdiceMoves.push(dice[x]);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif(diceMoves.length > 1){\r\n\t\t\tdiceMoves.push({\r\n\t\t\t\tnumber: diceMoves[0].number + diceMoves[1].number,\r\n\t\t\t\tactive: true\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tfor(var a=0;a<diceMoves.length;a++){\r\n\t\t\tif(diceMoves[a].active){\r\n\t\t\t\tvar dest = getDestination(startPos, diceMoves[a].number, player.enters);\r\n\t\t\t\tif(dest != null && !isPathBlocked(startPos, dest, player.enters, players)){\r\n\t\t\t\t\tpossiblePositions.push(dest);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t//out of all possiblePositions, remove safe spaces that have enemy markers\r\n\tvar b = possiblePositions.length;\r\n\twhile (b--) {\r\n\t\t//if the destination is a safe space, but not the player's Start space\r\n\t\tif(possiblePositions[b] != player.enters && [4,11,16,21,28,33,38,45,50,55,62,67].indexOf(possiblePositions[b]) != -1){\r\n\t\t\t//for each enemy player\r\n\t\t\tfor(var c=0;c<players.length;c++){\r\n\t\t\t\tif(players[c].player != turn){\r\n\t\t\t\t\t//for each enemy marker\r\n\t\t\t\t\tfor(var d=0; d < players[c].markers.length;d++){\r\n\t\t\t\t\t\t//if a marker is on the destination\r\n\t\t\t\t\t\tif(players[c].markers[d] == possiblePositions[b]){\r\n\t\t\t\t\t\t\t//remove from possible positions\r\n\t\t\t\t\t\t\tpossiblePositions.splice(b, 1);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\treturn possiblePositions;\r\n}\r\n\r\nfunction getMostAdvancedPosition(player){\r\n  \tvar space = null;\r\n  \tvar distanceFromStart = 0;\r\n\tfor(var z=0;z<player.markers.length;z++){\r\n\t\t//skip markers at Start and Home\r\n\t\tif([-11,-12,-13,-14].indexOf(player.markers[z]) == -1 && [-1,-2,-3,-4].indexOf(player.markers[z]) == -1){\r\n\t\t\tvar curDistance = getDistance(player.enters, player.markers[z], player.enters);\r\n\t\t\tif(distanceFromStart < curDistance){\r\n\t\t\t\tdistanceFromStart = curDistance;\r\n\t\t\t\t//get the space of the marker that is the greatest distance from start\r\n\t\t\t\tspace = player.markers[z];\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\treturn space;\r\n}\r\n\r\nfunction getDistance(start, end, enterPos){\r\n  \tvar distance = 0;\r\n  \twhile(start != end){\r\n  \t\tvar fromPosition = start;\r\n\t\tstart = manageIncrement(start, enterPos);\r\n\t\tif([-1,-2,-3,-4].indexOf(fromPosition) != -1){\r\n\t\t\t//count 5 dice space when entering\r\n\t\t\tdistance += 5;\r\n\t\t}else{\r\n\t\t\t//count 1 dice space\r\n\t\t\tdistance++;\r\n\t\t}\r\n  \t}\r\n  \treturn distance;\r\n}\r\n\r\nfunction findUsedDice(dice, moveDistance){\r\n\r\n\tfor(var b=0; b<dice.length;b++){\r\n\t\tif(dice[b].active && dice[b].number == moveDistance){\r\n\t\t\t//if one die equals the move\r\n\t\t\treturn [b];\r\n\t\t}\r\n\t}\r\n\t\r\n\tfor(var b=0; b<dice.length;b++){\r\n\t\tif(dice[b].active){\r\n\t\t\tfor(var c=0; c<dice.length;c++){\r\n\t\t\t\tif(b != c && dice[c].active && (dice[b].number + dice[c].number) == moveDistance){\r\n\t\t\t\t\t//if two dice equal the move\r\n\t\t\t\t\treturn [b,c];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\treturn [];\r\n}\r\n\r\nfunction getMarkersToRender(players, spacePosition){\r\n\tlet markersToRender = [];\r\n\tfor(var x=0; x < players.length; x++){\r\n\t\t//prevent rendering markers for inactive players\r\n\t\tif(players[x].human != null){\r\n\t\t\tfor(var y=0; y < players[x].markers.length; y++){\r\n\t\t\t\tif(players[x].markers[y] == spacePosition){\r\n\t\t\t\t\tmarkersToRender.push(players[x].player);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\treturn markersToRender;\r\n}\r\n\r\n\r\nfunction getSafePositionsForTurn(players, turn){\r\n\r\n  \tconst safePositions = [4,11,16,21,28,33,38,45,50,55,62,67,-1,-2,-3,-4];\r\n\r\n  \tfor(var y=0;y<players.length;y++){\r\n  \t\t//for each enemy player\r\n  \t\tif(players[y].player != turn){\r\n\t\t  \tfor(var z=0;z<players[y].markers.length;z++){\r\n\t\t  \t\t//if the player has a marker at Start\r\n\t\t  \t\tif([-1,-2,-3,-4].indexOf(players[y].markers[z]) != -1){\r\n\t\t  \t\t\t//remove the enter space from safe spaces\r\n\t\t  \t\t\tvar indexToRemove = safePositions.indexOf(players[y].enters);\r\n\t\t  \t\t\tif(indexToRemove != -1){\r\n\t\t  \t\t\t\tsafePositions.splice(indexToRemove, 1);\r\n\t\t  \t\t\t}\r\n\t\t  \t\t}\r\n\t\t  \t}\r\n\t  \t}\r\n\t}\r\n\r\n  \tconst ramps = [\r\n  \t\t[67,167,267,367,467,567,667,767],\r\n  \t\t[16,116,216,316,416,516,616,716],\r\n  \t\t[33,133,233,333,433,533,633,733],\r\n  \t\t[50,150,250,350,450,550,650,750]\r\n  \t];\r\n\r\n  \t//add each ramp position for the current player\r\n  \tfor(var x=0;x<ramps[turn-1].length;x++){\r\n  \t\tsafePositions.push(ramps[turn-1][x]);\r\n  \t}\r\n\r\n\treturn safePositions;\r\n}\r\n"],"sourceRoot":""}